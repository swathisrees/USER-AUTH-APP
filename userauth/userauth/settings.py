"""
Django settings for django project.

Generated by 'django-admin startproject' using Django 5.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# REQUIRED 
SECRET_KEY = 'YOUR SECRET KEY'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []
# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'YOUR APP NAME',
    'django.contrib.sites',
    'allauth',
    'allauth.socialaccount',
    'allauth.account',
    'allauth.socialaccount.providers.google', 
    'social_django',
]

#FOR GMAIL i.e. GOOGLE LOGIN SIGNUP

SOCIALACCOUNT_PROVIDERS = {
    "google": {
        'APP':{
            "client_id": "",        # Replace with your Google Client ID
            "secret": "",      # Replace with your Google Client Secret
        },
        "SCOPE": ["profile","email",],
        "AUTH_PARAMS":{"access_type": "online"},
        'VERIFIED EMAIL': True,
        
    }
}


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',   
    'allauth.account.middleware.AccountMiddleware',
]

SITE_ID=1

ROOT_URLCONF = 'your django project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS':  [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'django project name.wsgi.application'

# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

#POSTGRES ADMIN SETUP 

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': '', #DATABASE NAME
        'USER' : '', #Postgres Username
        'PASSWORD' : '',
        'HOST' : 'localhost',
        'PORT' : '5432',
        'OPTIONS': {
            'sslmode': 'disable', 
        }
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = os.path.join(BASE_DIR,  'staticfiles')
STATICFILES_DIRS = (os.path.join(BASE_DIR, 'static'), )

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

LOGIN_URL = 'login'

# FOR PASSWORD RESET EMAIL 
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST="smtp.gmail.com"
EMAIL_PORT=587
EMAIL_USE_TLS=True
EMAIL_HOST_USER="your host user email"
EMAIL_HOST_PASSWORD="generated password for that app"

AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',  # Default Django backend
    'allauth.account.auth_backends.AuthenticationBackend',  # allauth backend
)

SESSION_COOKIE_SECURE = True  # for HTTPS
CSRF_COOKIE_SECURE = True    # for HTTPS
SESSION_EXPIRE_AT_BROWSER_CLOSE = True

SOCIALACCOUNT_LOGIN_ON_GET=True

# TO GET THE FIRST NAME (this is for setusernme after google)
SOCIAL_AUTH_GOOGLE_OAUTH2_SCOPE = [
    'https://www.googleapis.com/auth/userinfo.email',
    'https://www.googleapis.com/auth/userinfo.profile',
]



#APP INITIAL WORK STARTED ON 18-11-2024
#sorted according to wotkflow 
#FINAL COMMIT OF BASE APP ON 18-12-2024